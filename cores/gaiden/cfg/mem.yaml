params:
  - { name:  RAM_OFFSET, value: "22'h10_0000" }
  - { name:  PCM_OFFSET, value: "(`PCM_START -`JTFRAME_BA1_START)>>1"}
  - { name:  OBJ_OFFSET, value: "(`OBJ_START -`JTFRAME_BA2_START)>>1"}
  - { name:  SCR_OFFSET, value: "(`GFX3_START-`JTFRAME_BA3_START)>>1"}
clocks:
  # main and mcu do not share the gate because they are in different clock domains
  # MC6809 module is problematic at 48MHz, hence using clk24
  # Not a problem for accuracy as there is an NMI based handshaking between main and mcu
  clk:
    - freq: 4000000
      outputs:
        - cen4
        - cen2
        - cen1
audio:
  rsum: 10k
  gain: 0.8 # prevent clipping (noticeable with unity gain)
  channels:
    # temporary values
    - { name: pcm,  module: jt6295,   rsum: 10k, fir: fir_192k_4k.csv }
    - { name: fm0,  module: jt03_fm,  rsum: 20k, rc: [{ r: 1rout, c: 1.2n }]}
    - { name: fm1,  module: jt03_fm,  rsum: 20k, rc: [{ r: 1rout, c: 1.2n }]}
    - { name: psg0, module: jt03_psg, rsum: 60k }
    - { name: psg1, module: jt03_psg, rsum: 60k }
sdram:
  banks:
    - buses:
      - name: ram
        addr_width: 14
        data_width: 16
        rw: true
        offset: RAM_OFFSET
        when: [ SMALL_BRAM ]
      - name: main
        addr_width: 18
        data_width: 16
    - buses:
      - name: snd
        addr_width: 16
        data_width: 8
      - name: pcm
        addr_width: 17
        data_width: 8
        offset: PCM_OFFSET
    - buses:
      - name: txt
        addr_width: 16
        data_width: 32
      - name: obj
        addr_width: 20
        data_width: 32
        offset: OBJ_OFFSET
    - buses:
      - name: scr2
        addr_width: 19
        data_width: 32
      - name: scr1
        addr_width: 19
        data_width: 32
        offset: SCR_OFFSET
bram:
  - name: ram
    addr_width: 14
    data_width: 16
    rw: true
    unless: [ SMALL_BRAM ]
  - name: tram
    addr_width: 12
    data_width: 16
    sim_file: true
    ioctl: { save: true, order: 0 }
    dual_port: { name: main, we: txt_we, rw: true, din: ram_din, dout: mt_dout }
  - name: scra
    addr_width: 13
    data_width: 16
    sim_file: true
    ioctl: { save: true, order: 1 }
    dual_port: { name: main, we: scra_we, rw: true, din: ram_din, dout: ma_dout }
  - name: scrb
    addr_width: 13
    data_width: 16
    sim_file: true
    ioctl: { save: true, order: 2 }
    dual_port: { name: main, we: scrb_we, rw: true, din: ram_din, dout: mb_dout }
  - name: oram
    addr_width: 13
    data_width: 16
    sim_file: true
    ioctl: { save: true, order: 3 }
    dual_port: { name: main, we: obj_we, rw: true, din: ram_din, dout: mo_dout }
  - name: pal
    addr_width: 13
    data_width: 16
    sim_file: true
    ioctl: { save: true, order: 4 }
    dual_port: { name: main, we: pal_we, rw: true, din: ram_din, dout: mp_dout }
